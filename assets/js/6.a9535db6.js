(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{234:function(n,a,e){"use strict";e.r(a);var t=e(0),s=Object(t.a)({},(function(){var n=this,a=n.$createElement,e=n._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"_1-综述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-综述"}},[n._v("#")]),n._v(" 1.综述")]),n._v(" "),e("ol",[e("li",[n._v("每一条指令都会生成一个新的镜像层")]),n._v(" "),e("li",[n._v("层数越多 越精细，复用性更高、增量更新、控制更精准")]),n._v(" "),e("li",[n._v("原则：\n"),e("ul",[e("li",[n._v("每个指令只做专一的事情")])])]),n._v(" "),e("li",[n._v("忽略文件："),e("code",[n._v(".dockerignore")]),n._v("文本文件（https://www.linuxea.com/2297.html）")]),n._v(" "),e("li",[n._v("打镜像命令：")])]),n._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[n._v("     docker  image build "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v(".")]),n._v(" -t myimg:v0.1\n\n")])])]),e("h2",{attrs:{id:"_2-常用参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用参数"}},[n._v("#")]),n._v(" 2.常用参数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    COPY：\n        本地路径，支持正则\n        \n    ADD：\n        本地TAR文件:会自动解压缩\n        URL路径：只会下载，不会自动解压缩\n\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('    WORKDIR：\n        可以出现多次，作用域为当前->下个WORKDIR之间\n        用于设定工作目录\n        支持变量（更灵活，复用）：WORKDIR $DIR\n        \n    VOLUME：    \n        VOLUME ["<path1>", "<path2>", ...]\n        VOLUME <path>\n        将本地主机目录挂载到目标容器中，将其他容器挂载的挂载点挂载到目标容器中\n\n        \n    EXPOSE：\n        （相当于宿主机上增加一条DNAT规则，对应到宿主机的路由，从而转发到容器中)\n        端口暴露\n        Docker服务端容器对外映射的本地端口，需要在启动容器run时使用-p或者-P选项生效\n\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    ENV：\n        定义镜像所需的环境变量\n        build阶段使用\n        syntax：\n            ENV <key> <value>       # 只能设置一个变量\n            ENV <key>=<value> ...   # 允许一次设置多个变量\n        调用：\n            $key或者${key}\n            \n    ARG（建议用ARG，少用ENV，更灵活）：\n        build阶段传值，替换dockerfile的env\n\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    RUN：\n        build阶段使用\n        每一条都会运行\n        基础镜像中需存在的命令，否则会报错\n        syntax：\n           RUN <command> （建议用这种）\n           RUN [“<command>”,”<param1>”,”<parm2>”]（不会以shell发起）\n           如：RUN [“/bin/bash”,”-c”,“<command>”,”<param1>”]\n    \n    CMD：\n        run阶段使用\n        只会运行最后一条\n        允许被用户run阶段，用命令覆盖\n        \n    ENTRYPOINT\n       （可代替CMD，如果一起使用，则CMD为参数：ENTRYPOINT CMD）：\n        run阶段使用\n        只会运行最后一条\n        不允许被用户以传统方式覆盖，只允许用特定参数覆盖（—entrypoint）\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    USER:\n        定义用户\n        \n    HELATHCHECK：\n        健康检查(只杀不负责重启)：\n            HRALTHCHECK —internal=5m —timeout=3s\\\n            CMD curl -f http://localhost/||exit 1\n            \n    ONBUILD：（延迟加载）\n                只有当以当前镜像为基础镜像，去构建下一级镜像的时候才会被执行。\n\n")])])]),e("h2",{attrs:{id:"_3-dockerfile优化手段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-dockerfile优化手段"}},[n._v("#")]),n._v(" 3.Dockerfile优化手段")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    容器能快速迭代\n    使用.dockerignore文件\n    不要安装不必要的程序包\n    单一容器只运行单一进程\n    最小化镜像层数\n    对多行参数进行排序\n    构建镜像使用缓存\n")])])]),e("h2",{attrs:{id:"_4-dockerfile例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-dockerfile例子"}},[n._v("#")]),n._v(" 4.Dockerfile例子")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('FROM busybox:latest\n\nENV webhome="/data/web/html"\n\nLABEL maintainer="Aaron <584911644@qq.com>"\n\nCOPY pages/*.html ${webhome}/\n\nWORKDIR /tmp/\n\nADD http://nginx.org/download/nginx-1.15.8.tar.gz /nginx/\n\nEXPOSE 80/tcp\n\nRUN mkdir -p /web/bbs/{1,2} && \\\n   ["/bin/sh","-c","echo hi > /web/bbs/1/index.html"]\n\n')])])])])}),[],!1,null,null,null);a.default=s.exports}}]);