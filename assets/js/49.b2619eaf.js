(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{214:function(t,s,n){"use strict";n.r(s);var e=n(0),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"envoy使用入门-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#envoy使用入门-2"}},[t._v("#")]),t._v(" Envoy使用入门_2")]),t._v(" "),n("p",[t._v("本章节将通过"),n("code",[t._v("docker-compose")]),t._v("容器的方式，模拟"),n("code",[t._v("Sidecar")]),t._v("与主容器协作的方式，让你学习到其中的基础配置、\n并理解监听器（"),n("code",[t._v("listener")]),t._v("）和集群（"),n("code",[t._v("Cluster")]),t._v("）之间是如何通过"),n("code",[t._v("ingress")]),t._v("协作的。")]),t._v(" "),n("ul",[n("li",[t._v("Cluster简易静态配置")]),t._v(" "),n("li",[t._v("tcpproxy-ingress实例")]),t._v(" "),n("li",[t._v("参考文档")])]),t._v(" "),n("h2",{attrs:{id:"_1-cluster简易静态配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-cluster简易静态配置"}},[t._v("#")]),t._v(" 1.Cluster简易静态配置")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群的惟一名称，且未提供alt_stat_name时将会被用于统计信息中；")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alt_state_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 统计信息中使用的集群代名称；")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于解析集群（生成集群端点）时使用的服务发现类型，可用值有STATIC、STRICT_DNS、LOGICAL_DNS、ORIGINAL_DST和EDS等；")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lb_policy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 负载均衡算法，支持ROUND_ROBIN、LEAST_REQUEST、RING_HASH、RANDOM、MAGLEV和CLUSTER_PROVIDED；")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("load_assignment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为STATIC、STRICT_DNS或LOGICAL_DNS类型的集群指定成员获取方式；EDS类型的集成要使用eds_cluster_config字段配置；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cluster_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群名称；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("endpoints")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端点列表；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("locality")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 标识上游主机所处的位置，通常以region、zone等进行标识；")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lb_endpoints")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 属于指定位置的端点列表；")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("endpoint_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端点的名称；")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("endpoint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端点定义；")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("socket_adddress")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端点地址标识；")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端点地址；")]),t._v("\n            port_value： "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端点端口；")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 协议类型；")]),t._v("\n")])])]),n("h2",{attrs:{id:"_2-tcpproxy-ingress实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-tcpproxy-ingress实例"}},[t._v("#")]),t._v(" 2.tcpproxy-ingress实例")]),t._v(" "),n("ol",[n("li",[t._v("创建工作目录，并编辑所需文件")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" tcpproxy\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" tcpproxy\n    \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#envoy.yaml")]),t._v("\nstatic_resources:\n  listeners:\n  - name: listener_0\n    address:\n      socket_address: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" address: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0, port_value: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ingress模式，需要接收外部请求，所以是0.0.0.0")]),t._v("\n    filter_chains:\n    - filters:\n      - name: envoy.tcp_proxy\n        typed_config:\n          "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@type"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy\n          stat_prefix: tcp\n          cluster: test_cluster\n\n  clusters:\n  - name: test_cluster\n    connect_timeout: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".25s\n    type: STATIC\n    lb_policy: ROUND_ROBIN\n    load_assignment:\n      cluster_name: test_cluster\n      endpoints:\n      - lb_endpoints:\n        - endpoint:\n            address: \n              socket_address: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" address: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1, port_value: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#模拟Sidecar中ingress模式的业务pod主进程，只需要监听本地127.0.0.1接收listener_0的请求就行")]),t._v("\n              \n              \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker-compose,yaml")]),t._v("\nversion: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n\nservices:\n  envoy:\n    image: envoyproxy/envoy-alpine:v1.11.1\n    volumes:\n    - /root/envoy/tcpproxy/envoy.yaml:/etc/envoy/envoy.yaml\n    network_mode: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"service:mainserver"')]),t._v("\n    depends_on:\n    - mainserver\n\n  mainserver:\n    image: ikubernetes/mini-http-server:v0.3\n    networks:\n      envoymesh:\n        aliases:\n        - webserver\n        - httpserver\n\nnetworks:\n  envoymesh: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("           \n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[t._v("使用"),n("code",[t._v("docker-compose up")]),t._v("启动容器，两者处于同一个网络名称空间（"),n("code",[t._v("network_mode")]),t._v("）")]),t._v(" "),n("p",[t._v("一个是服务网格的ingress容器："),n("code",[t._v("tcpproxy_envoy_1")])]),t._v(" "),n("p",[t._v("另一个是业务主容器："),n("code",[t._v("tcpproxy_mainserver_1")])])])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker-compose up\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("进入"),n("code",[t._v("tcpproxy_envoy_1")]),t._v("容器观察"),n("code",[t._v("ingress")]),t._v("的"),n("code",[t._v("listener_0 80")]),t._v("端口是否起来")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-etcd-mater01 tcpproxy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker exec -it tcpproxy_envoy_1 /bin/sh")]),t._v("\n/ "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ifconfig ")]),t._v("\neth0      Link encap:Ethernet  HWaddr 02:42:AC:12:00:02  \n          inet addr:172.18.0.2  Bcast:172.18.255.255  Mask:255.255.0.0\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:8 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:1 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0 \n          RX bytes:648 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("648.0")]),t._v(" B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  TX bytes:90 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.0")]),t._v(" B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \nlo        Link encap:Local Loopback  \n          inet addr:127.0.0.1  Mask:255.0.0.0\n          UP LOOPBACK RUNNING  MTU:65536  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0 \n          RX bytes:0 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  TX bytes:0 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n/ "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# netstat -npl")]),t._v("\nActive Internet connections "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("only servers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.11:48746        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:*               LISTEN      -\ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:80              "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:*               LISTEN      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/envoy\ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" :::8081                 :::*                    LISTEN      -\nudp        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.11:47282        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:*                           -\nActive UNIX domain sockets "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("only servers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nProto RefCnt Flags       Type       State         I-Node PID/Program name    Path\n")])])]),n("ol",{attrs:{start:"4"}},[n("li",[t._v("测试成功")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-etcd-mater01 tcpproxy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 172.18.0.2/")]),t._v("\nThis is a website server by a Go HTTP server.\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-etcd-mater01 tcpproxy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 172.18.0.2/hostname")]),t._v("\nHostname: 9cb0738547f0.\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@k8s-etcd-mater01 tcpproxy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl 172.18.0.2/headers")]),t._v("\nUser-Agent: curl/7.29.0\nAccept: */*\n\n")])])]),n("h2",{attrs:{id:"_3-参考文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-参考文档"}},[t._v("#")]),t._v(" 3.参考文档")]),t._v(" "),n("p",[t._v("Clusters_API_v2_Reference：https://www.envoyproxy.io/docs/envoy/latest/api-v2/clusters/clusters")])])}),[],!1,null,null,null);s.default=a.exports}}]);