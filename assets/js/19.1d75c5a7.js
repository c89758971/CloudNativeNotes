(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{242:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-常用插件对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-常用插件对比"}},[t._v("#")]),t._v(" 1.常用插件对比")]),t._v(" "),s("ul",[s("li",[t._v("Flannel（简单、使用居多）：基于Vxlan技术（叠加网络+二层隧道），不支持网络策略")]),t._v(" "),s("li",[t._v("Calico（较复杂，使用率少于Flannel）：也可以支持隧道网络，但是是三层隧道（IPIP），支持网络策略")])]),t._v(" "),s("h2",{attrs:{id:"_2-flannel架构图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-flannel架构图"}},[t._v("#")]),t._v(" 2.Flannel架构图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://github-aaron89.oss-cn-beijing.aliyuncs.com/Kubernetes/flannel.png",alt:"Flannel-1"}})]),t._v(" "),s("h2",{attrs:{id:"_3-配置清单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置清单"}},[t._v("#")]),t._v(" 3.配置清单")]),t._v(" "),s("pre",[s("code",[t._v("https://github.com/coreos/flannel/blob/master/Documentation/configuration.md\n")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("flannel")]),t._v("的网络地址是"),s("code",[t._v("10.244.0.0/16")]),t._v(",默认每个子网的掩码长度为"),s("code",[t._v("24")]),t._v("，如图所示")]),t._v(" "),s("li",[s("code",[t._v("K8s")]),t._v("节点之间（"),s("code",[t._v("Node")]),t._v("）通过"),s("code",[t._v("Vxlan")]),t._v("技术进行通信，根据"),s("code",[t._v("node")]),t._v("情况，\n会把"),s("code",[t._v("flannel")]),t._v("的"),s("code",[t._v("16")]),t._v("位网络地址拆分成多个"),s("code",[t._v("24")]),t._v("位网络地址，供各"),s("code",[t._v("Node")]),t._v("进行分配")]),t._v(" "),s("li",[t._v("每个"),s("code",[t._v("Node")]),t._v("节点按序占用一个"),s("code",[t._v("C")]),t._v("类地址，对应节点上面的"),s("code",[t._v("Podip")]),t._v("是在该"),s("code",[t._v("C")]),t._v("类地址中按规则分配的。")])]),t._v(" "),s("h2",{attrs:{id:"_4-配置实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置实例"}},[t._v("#")]),t._v(" 4.配置实例")]),t._v(" "),s("pre",[s("code",[t._v("SubnetLen：\n\n定义每个子网的掩码长度，默认为24，那么10.244.0.0/16就会被分成255个子网，就说明此时K8s集群\n")])]),t._v(" "),s("p",[t._v("最大支持255个节点（"),s("code",[t._v("Node")]),t._v("），其中每个Node节点都有使用一个子网，每个子网可以分配多少个主机位，\n就代表每个Node节点可以运行的Pod数量（255）")]),t._v(" "),s("pre",[s("code",[t._v("SubnetMin：\n \n定义Pod网络的起始，默认是从10.244.0.0/24开始，也可以定义从10.244.10.0/24开始，也不一定要使用10开始的网络\n\nSubnetMax：\n\n与上面相反，定义Pod网络的结束\n")])]),t._v(" "),s("h2",{attrs:{id:"_5-配置样例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-配置样例"}},[t._v("#")]),t._v(" 5.配置样例")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Network"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.0.0.0/8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"SubnetLen"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"SubnetMin"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.10.0.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"SubnetMax"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.99.0.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Backend"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"udp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Port"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7890")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);